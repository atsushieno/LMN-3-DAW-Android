diff --git a/Source/Main.cpp b/Source/Main.cpp
index 46d2290..781f6d5 100644
--- a/Source/Main.cpp
+++ b/Source/Main.cpp
@@ -14,12 +14,12 @@
 class GuiAppApplication : public juce::JUCEApplication {
   public:
     GuiAppApplication()
-        : splash(new juce::SplashScreen(
+        /*: splash(new juce::SplashScreen(
               "Welcome to my app!",
               juce::ImageFileFormat::loadFrom(
                   ImageData::tracktion_engine_powered_png,
                   ImageData::tracktion_engine_powered_pngSize),
-              true)) {}
+              true))*/ {}
 
     const juce::String getApplicationName() override {
         return JUCE_APPLICATION_NAME_STRING;
@@ -92,7 +92,7 @@ class GuiAppApplication : public juce::JUCEApplication {
         initialiseAudioDevices();
         mainWindow = std::make_unique<MainWindow>(getApplicationName(), engine,
                                                   *edit, *midiCommandManager);
-        splash->deleteAfterDelay(juce::RelativeTime::seconds(4.25), false);
+        //splash->deleteAfterDelay(juce::RelativeTime::seconds(4.25), false);
     }
 
     void initialiseAudioDevices() {
diff --git a/Source/Views/Edit/Plugins/ExtendedUIBehaviour.h b/Source/Views/Edit/Plugins/ExtendedUIBehaviour.h
index 694559f..18db812 100644
--- a/Source/Views/Edit/Plugins/ExtendedUIBehaviour.h
+++ b/Source/Views/Edit/Plugins/ExtendedUIBehaviour.h
@@ -146,12 +146,16 @@ class ExtendedUIBehaviour : public tracktion::UIBehaviour {
         }
 
         while (runner.isThreadRunning()) {
+#if ANDROID
+            jassertfalse;
+#else
             if (!juce::MessageManager::getInstance()->runDispatchLoopUntil(
                     10)) {
                 // Can update the GUI here if we need to, but since its just a
                 // continuous loading animation we dont need to do anything for
                 // now
             }
+#endif
         }
 
         // Once the thread finishes, hide the progress view
